c:\mongo\data

//executa o servidor mongodb
C:\Program Files\MongoDB\Server\4.2\bin>mongod

//executa o cliente do mongo e permite que digitemos comandos:
C:\Program Files\MongoDB\Server\4.2\bin>mongo


//cria uma coleção:
db.createCollection("Employee")

//mostra os bancos
show dbs

//Já cria um banco 
use SensorDB

//Visualiza as coleções
show collections

//Visualiza os dados da coleção:
db.AgentLog.find()

//Pesquisa como o like no sql https://stackoverflow.com/questions/3305561/how-to-query-mongodb-with-like
//Procura dados cuja descrição são do dia 01 de julho:
db.AgentLog.find({"description":/01.07/})
db.AgentLog.find({"description":/01.07/}).count()
//pega os contentype = 5 com data 01/07:
db.AgentLog.find({"description":/01.07/, "contentype":/5/}).count()


//apaga
db.dropDatabase()

//apaga uma coleção:
db.alunos.drop()


//mostra os registros de Sensor
db.Sensor.find()

db.alunos.find({"_id" : ObjectId("56cb0002b6d75ec12f75d3b5")}).pretty()

//Mostra as coleções
show collections

use test

db.createCollection("alunos")






db.alunos.insert({
  "_id" : ObjectId("58fb5f0f9823dc9c0ffccd95"),
  "nome" : "Felipe",
  "data_nascimento" : ISODate("1994-03-26T03:00:00Z"),
  "curso" : {
    "nome" : "Sistemas de informação"
  },
  "notas" : [
    10,
    9,
    4
  ],
  "habilidades" : [
    {
      "nome" : "inglês",
      "nivel" : "avançado"
    },
    {
      "nome" : "taekwondo",
      "nivel" : "básico"
    }
  ],
  "contato" : {
    "endereco" : "R. Dona Avelina, 10 - Vila Mariana, São Paulo - SP, 04111-010",
    "coordinates" : [
      -23.586917,
      -46.633484
    ],
    "type" : "Point"
  }
})
db.alunos.insert({
  "_id" : ObjectId("58fb5f0f9823dc9c0ffccd96"),
  "nome" : "Celina",
  "data_nascimento" : ISODate("2011-03-09T03:00:00Z"),
  "notas" : [
    10,
    9,
    8
  ],
  "curso" : {
    "nome" : "Química"
  },
  "habilidades" : [
    {
      "nome" : "Inglês",
      "nivel" : "Basico"
    },
    {
      "nome" : "Alemão",
      "nivel" : "Basico"
    }
  ],
  "contato" : {
    "endereco" : "Av. dos Eucaliptos, 300 - Indianópolis, São Paulo - SP, 04517-050",
    "coordinates" : [
      -23.606913,
      -46.673175
    ],
    "type" : "Point"
  }
})
db.alunos.insert({
  "_id" : ObjectId("58fb5f109823dc9c0ffccd97"),
  "nome" : "Lazaro",
  "data_nascimento" : ISODate("1987-01-30T02:00:00Z"),
  "notas" : [
    10,
    9,
    10
  ],
  "curso" : {
    "nome" : "Análise de Sistemas"
  },
  "habilidades" : [
    {
      "nome" : "Inglês",
      "nivel" : "Basico"
    },
    {
      "nome" : "Alemão",
      "nivel" : "Basico"
    }
  ],
  "contato" : {
    "endereco" : "Av. Ibirapuera, 2120 - Indianópolis, São Paulo - SP, 04028-001",
    "coordinates" : [
      -23.602668,
      -46.661897
    ],
    "type" : "Point"
  }
})

db.alunos.insert({
    "_id" : ObjectId("58fbb53be824cc048dfae263"),
    "nome" : "Julia",
    "data_nascimento" : ISODate("2017-04-11T03:00:00.000Z"),
    "curso" : {
        "nome" : "Sistema de Informacao"
    },
    "habilidades" : [ 
        {
            "nome" : "Ingles",
            "nivel" : "Intermediario"
        }
    ],
    "notas" : [ 
        8.0, 
        9.0
    ],
    "contato" : {
        "endereco" : "Av. Kenkiti Simomoto, 300 - Jaguare, São Paulo - SP, 05347-010",
        "coordinates" : [ 
            -23.551006, 
            -46.740403
        ],
        "type" : "Point"
    }
})

db.alunos.insert({
    "_id" : ObjectId("590e0e03c5bb650311dc3de3"),
    "nome" : "Joaquina",
    "data_nascimento" : ISODate("2017-05-09T03:00:00.000Z"),
    "curso" : {
        "nome" : "Administracao"
    },
    "habilidades" : [],
    "notas" : [],
    "contato" : {
        "endereco" : "Rua Vergueiro, 3100",
        "coordinates" : [ 
            -23.5872747, 
            -46.6338947
        ],
        "type" : "Point"
    }
})

db.alunos.insert({
    "_id" : ObjectId("590e1659c5bb65038ac042e4"),
    "nome" : "Jose",
    "data_nascimento" : ISODate("2017-05-22T03:00:00.000Z"),
    "curso" : {
        "nome" : "Administracao"
    },
    "habilidades" : [],
    "notas" : [],
    "contato" : {
        "endereco" : "Rua Vergueiro, 3000",
        "coordinates" : [ 
            -23.5872747, 
            -46.6338947
        ],
        "type" : "Point"
    }
})

db.alunos.insert({
    "_id" : ObjectId("590e17f4c5bb65038ac042e8"),
    "nome" : "Luiza",
    "data_nascimento" : ISODate("2017-05-18T03:00:00.000Z"),
    "curso" : {
        "nome" : "Geografia"
    },
    "habilidades" : [],
    "notas" : [],
    "contato" : {
        "endereco" : "Rua Gaivota, 300 - Indianópolis, São Paulo - State of São Paulo, Brazil",
        "coordinates" : [ 
            -23.5996547, 
            -46.6639453
        ],
        "type" : "Point"
    }
})

//Para buscar os alunos que cursam "Sistema de informação":
db.alunos.find({"curso.nome" : "Sistema de informação"})

//Atualização
db.alunos.update(
    {"curso.nome" : "Sistemas de informação"},
    {
        $set : {
            "curso.nome" : "Sistemas de Informação"
        }
    }
)

//Atualiza todos os registros
db.alunos.update(
    {"curso.nome" : "Sistemas de informação"},
    {
        $set : 
           {"curso.nome" : "Sistemas de Informação"}  
        }, 
      {
        multi : true 
      }
)

//atualiza pelo id
db.alunos.update(
    {"_id" : ObjectId("56cb0002b6d75ec12f75d3b5")},
    {$set : {
        {
            "notas" : [
                10,
                9,
                4.5,
                8.5
            ]
        }    
    }
}

//coloca uma nota dentro do array com o push
db.alunos.update(
    {"_id" : ObjectId("56cb0002b6d75ec12f75d3b5")},
    {
        $push : {
            notas : 8.5
        }    
    }
)

db.alunos.update(
    {"_id" : ObejctId("56cb0139b6d75ec12f75d3b6")},
    {
        $push : {
            "notas" : {$each : [8.5, 3] }
        }
    }
)



db.alunos.update(
{ "_id" : ObjectId("56cb0139b6d75ec12f75d3b6") },
{
    $set : {
    localizacao : {
        endereco : "Rua Vergueiro, 3185",
        cidade : "São Paulo",
        coordinates : [-23.588213, -46.632356],
        type : "Point"
        }
    }
}
)

Contanto a quantidade de cada tipo de dado:

db.AgentLog.find({"contentype":"1"}).count();
db.AgentLog.find({"contentype":"2"}).count();
db.AgentLog.find({"contentype":"3"}).count();
db.AgentLog.find({"contentype":"4"}).count();
db.AgentLog.find({"contentype":"5"}).count();

